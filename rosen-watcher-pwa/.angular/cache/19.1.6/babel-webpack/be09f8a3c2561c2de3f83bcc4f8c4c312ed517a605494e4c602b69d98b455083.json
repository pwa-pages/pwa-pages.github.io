{"ast":null,"code":"import '../../shared/ts/chain.service';\nimport { QRDialogComponent } from '../statistics/qrdialog.component';\nimport { EventType } from './event.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./event.service\";\nexport let BrowserService = /*#__PURE__*/(() => {\n  class BrowserService {\n    constructor(qrDialog, router, location, eventService) {\n      this.qrDialog = qrDialog;\n      this.router = router;\n      this.location = location;\n      this.eventService = eventService;\n      window.addEventListener('beforeinstallprompt', event => {\n        window.showHomeLink = true;\n        event.preventDefault();\n        window.deferredPrompt = event;\n      });\n      window.addEventListener('resize', () => {\n        this.eventService?.sendEvent(EventType.WindowResized);\n      });\n    }\n    showQR(addresses) {\n      this.qrDialog.open(QRDialogComponent, {\n        data: {\n          qrData: this.getShareUrl(addresses)\n        }\n      });\n    }\n    getShareUrl(addresses) {\n      const currentUrl = window.location.pathname;\n      const subdirectory = currentUrl.substring(0, currentUrl.lastIndexOf('/'));\n      const urlTree = this.router.createUrlTree(['main'], {\n        queryParams: {\n          addresses: JSON.stringify(addresses)\n        }\n      });\n      const url = window.location.origin + subdirectory + this.router.serializeUrl(urlTree);\n      return url;\n    }\n    replacePath() {\n      const currentPath = this.location?.path();\n      if (!currentPath) {\n        return;\n      }\n      if (currentPath.includes('?')) {\n        const parts = currentPath.split('?');\n        const newPath = parts[0];\n        this.location?.replaceState(newPath);\n      }\n    }\n    share(addresses) {\n      const url = this.getShareUrl(addresses);\n      console.log('share url: ' + url);\n      navigator.share({\n        title: 'Rosen Watcher',\n        text: 'Rosen Watcher',\n        url: url\n      });\n    }\n    showHomeLink() {\n      return window.showHomeLink == true;\n    }\n    installApp() {\n      if (window.deferredPrompt) {\n        window.deferredPrompt?.prompt();\n        window.deferredPrompt?.userChoice.then(choiceResult => {\n          if (choiceResult.outcome === 'accepted') {\n            window.showHomeLink = false;\n          }\n          window.deferredPrompt = undefined;\n        });\n      }\n    }\n    static {\n      this.ɵfac = function BrowserService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || BrowserService)(i0.ɵɵinject(i1.MatDialog), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.Location), i0.ɵɵinject(i4.EventService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: BrowserService,\n        factory: BrowserService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return BrowserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}