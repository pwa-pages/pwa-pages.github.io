import { Component, Input, ChangeDetectionStrategy } from '@angular/core';
import { CommonModule } from '@angular/common';
import * as i0 from "@angular/core";
import * as i1 from "../services/gallery.service";
import * as i2 from "@angular/platform-browser";
import * as i3 from "@angular/cdk/bidi";
import * as i4 from "@angular/common";
export class GalleryNavComponent {
    constructor(gallery, _sanitizer, dir) {
        this.gallery = gallery;
        this._sanitizer = _sanitizer;
        this.dir = dir;
    }
    ngOnInit() {
        this.navIcon = this._sanitizer.bypassSecurityTrustHtml(this.config.navIcon);
    }
    rightButton() {
    }
    leftButton() {
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.1", ngImport: i0, type: GalleryNavComponent, deps: [{ token: i1.Gallery }, { token: i2.DomSanitizer }, { token: i3.Directionality }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.1", type: GalleryNavComponent, isStandalone: true, selector: "gallery-nav", inputs: { id: ["galleryId", "id"], state: "state", config: "config" }, ngImport: i0, template: `
    <i *ngIf="config.loop || state.hasPrev"
       class="g-nav-prev"
       aria-label="Previous"
       role="button"
       (click)="gallery.ref(this.id).prev(config.scrollBehavior)"
       [innerHtml]="navIcon"></i>

    <i *ngIf="config.loop || state.hasNext"
       class="g-nav-next"
       aria-label="Next"
       role="button"
       (click)="gallery.ref(this.id).next(config.scrollBehavior)"
       [innerHtml]="navIcon"></i>
  `, isInline: true, styles: [".g-nav-next,.g-nav-prev{position:absolute;top:50%;display:flex;padding:16px 8px;cursor:pointer;z-index:999;opacity:.6;transition:opacity linear .15s,right linear .15s,left linear .15s}.g-nav-next:hover,.g-nav-prev:hover{opacity:1}.g-nav-next ::ng-deep svg,.g-nav-prev ::ng-deep svg{filter:var(--g-nav-drop-shadow);width:28px;height:28px;fill:#fff}.g-nav-next{left:var(--nav-next-left);right:var(--nav-next-right);transform:var(--nav-next-transform)}.g-nav-next:hover{left:var(--nav-next-hover-left);right:var(--nav-next-hover-right)}.g-nav-prev{left:var(--nav-prev-left);right:var(--nav-prev-right);transform:var(--nav-prev-transform)}.g-nav-prev:hover{left:var(--nav-prev-hover-left);right:var(--nav-prev-hover-right)}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.1", ngImport: i0, type: GalleryNavComponent, decorators: [{
            type: Component,
            args: [{ selector: 'gallery-nav', changeDetection: ChangeDetectionStrategy.OnPush, template: `
    <i *ngIf="config.loop || state.hasPrev"
       class="g-nav-prev"
       aria-label="Previous"
       role="button"
       (click)="gallery.ref(this.id).prev(config.scrollBehavior)"
       [innerHtml]="navIcon"></i>

    <i *ngIf="config.loop || state.hasNext"
       class="g-nav-next"
       aria-label="Next"
       role="button"
       (click)="gallery.ref(this.id).next(config.scrollBehavior)"
       [innerHtml]="navIcon"></i>
  `, standalone: true, imports: [CommonModule], styles: [".g-nav-next,.g-nav-prev{position:absolute;top:50%;display:flex;padding:16px 8px;cursor:pointer;z-index:999;opacity:.6;transition:opacity linear .15s,right linear .15s,left linear .15s}.g-nav-next:hover,.g-nav-prev:hover{opacity:1}.g-nav-next ::ng-deep svg,.g-nav-prev ::ng-deep svg{filter:var(--g-nav-drop-shadow);width:28px;height:28px;fill:#fff}.g-nav-next{left:var(--nav-next-left);right:var(--nav-next-right);transform:var(--nav-next-transform)}.g-nav-next:hover{left:var(--nav-next-hover-left);right:var(--nav-next-hover-right)}.g-nav-prev{left:var(--nav-prev-left);right:var(--nav-prev-right);transform:var(--nav-prev-transform)}.g-nav-prev:hover{left:var(--nav-prev-hover-left);right:var(--nav-prev-hover-right)}\n"] }]
        }], ctorParameters: () => [{ type: i1.Gallery }, { type: i2.DomSanitizer }, { type: i3.Directionality }], propDecorators: { id: [{
                type: Input,
                args: ['galleryId']
            }], state: [{
                type: Input
            }], config: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FsbGVyeS1uYXYuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctZ2FsbGVyeS9zcmMvbGliL2NvbXBvbmVudHMvZ2FsbGVyeS1uYXYuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLHVCQUF1QixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7Ozs7O0FBNkIvQyxNQUFNLE9BQU8sbUJBQW1CO0lBTzlCLFlBQW1CLE9BQWdCLEVBQVUsVUFBd0IsRUFBUyxHQUFtQjtRQUE5RSxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQVUsZUFBVSxHQUFWLFVBQVUsQ0FBYztRQUFTLFFBQUcsR0FBSCxHQUFHLENBQWdCO0lBQ2pHLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDOUUsQ0FBQztJQUVELFdBQVc7SUFFWCxDQUFDO0lBRUQsVUFBVTtJQUVWLENBQUM7OEdBcEJVLG1CQUFtQjtrR0FBbkIsbUJBQW1CLDhJQWxCcEI7Ozs7Ozs7Ozs7Ozs7O0dBY1QsMHhCQUVTLFlBQVk7OzJGQUVYLG1CQUFtQjtrQkF0Qi9CLFNBQVM7K0JBQ0UsYUFBYSxtQkFDTix1QkFBdUIsQ0FBQyxNQUFNLFlBRXJDOzs7Ozs7Ozs7Ozs7OztHQWNULGNBQ1csSUFBSSxXQUNQLENBQUMsWUFBWSxDQUFDO29JQUtILEVBQUU7c0JBQXJCLEtBQUs7dUJBQUMsV0FBVztnQkFDVCxLQUFLO3NCQUFiLEtBQUs7Z0JBQ0csTUFBTTtzQkFBZCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBEb21TYW5pdGl6ZXIsIFNhZmVIdG1sIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XHJcbmltcG9ydCB7IERpcmVjdGlvbmFsaXR5IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2JpZGknO1xyXG5pbXBvcnQgeyBHYWxsZXJ5IH0gZnJvbSAnLi4vc2VydmljZXMvZ2FsbGVyeS5zZXJ2aWNlJztcclxuaW1wb3J0IHsgR2FsbGVyeVN0YXRlIH0gZnJvbSAnLi4vbW9kZWxzL2dhbGxlcnkubW9kZWwnO1xyXG5pbXBvcnQgeyBHYWxsZXJ5Q29uZmlnIH0gZnJvbSAnLi4vbW9kZWxzL2NvbmZpZy5tb2RlbCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2dhbGxlcnktbmF2JyxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcclxuICBzdHlsZVVybHM6IFsnLi9nYWxsZXJ5LW5hdi5zY3NzJ10sXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxpICpuZ0lmPVwiY29uZmlnLmxvb3AgfHwgc3RhdGUuaGFzUHJldlwiXHJcbiAgICAgICBjbGFzcz1cImctbmF2LXByZXZcIlxyXG4gICAgICAgYXJpYS1sYWJlbD1cIlByZXZpb3VzXCJcclxuICAgICAgIHJvbGU9XCJidXR0b25cIlxyXG4gICAgICAgKGNsaWNrKT1cImdhbGxlcnkucmVmKHRoaXMuaWQpLnByZXYoY29uZmlnLnNjcm9sbEJlaGF2aW9yKVwiXHJcbiAgICAgICBbaW5uZXJIdG1sXT1cIm5hdkljb25cIj48L2k+XHJcblxyXG4gICAgPGkgKm5nSWY9XCJjb25maWcubG9vcCB8fCBzdGF0ZS5oYXNOZXh0XCJcclxuICAgICAgIGNsYXNzPVwiZy1uYXYtbmV4dFwiXHJcbiAgICAgICBhcmlhLWxhYmVsPVwiTmV4dFwiXHJcbiAgICAgICByb2xlPVwiYnV0dG9uXCJcclxuICAgICAgIChjbGljayk9XCJnYWxsZXJ5LnJlZih0aGlzLmlkKS5uZXh0KGNvbmZpZy5zY3JvbGxCZWhhdmlvcilcIlxyXG4gICAgICAgW2lubmVySHRtbF09XCJuYXZJY29uXCI+PC9pPlxyXG4gIGAsXHJcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcclxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgR2FsbGVyeU5hdkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gIG5hdkljb246IFNhZmVIdG1sO1xyXG4gIEBJbnB1dCgnZ2FsbGVyeUlkJykgaWQ6IHN0cmluZztcclxuICBASW5wdXQoKSBzdGF0ZTogR2FsbGVyeVN0YXRlO1xyXG4gIEBJbnB1dCgpIGNvbmZpZzogR2FsbGVyeUNvbmZpZztcclxuXHJcbiAgY29uc3RydWN0b3IocHVibGljIGdhbGxlcnk6IEdhbGxlcnksIHByaXZhdGUgX3Nhbml0aXplcjogRG9tU2FuaXRpemVyLCBwdWJsaWMgZGlyOiBEaXJlY3Rpb25hbGl0eSkge1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLm5hdkljb24gPSB0aGlzLl9zYW5pdGl6ZXIuYnlwYXNzU2VjdXJpdHlUcnVzdEh0bWwodGhpcy5jb25maWcubmF2SWNvbik7XHJcbiAgfVxyXG5cclxuICByaWdodEJ1dHRvbigpIHtcclxuXHJcbiAgfVxyXG5cclxuICBsZWZ0QnV0dG9uKCk6IHZvaWQge1xyXG5cclxuICB9XHJcbn1cclxuIl19