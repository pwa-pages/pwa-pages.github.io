import { GalleryConfig } from '../../models/config.model';
import { SliderAdapter } from './base-adapter';
import { SmoothScrollOptions } from '../../smooth-scroll';
/**
 * A clone of HammerJs constants
 */
export declare const DIRECTION_LEFT: number;
export declare const DIRECTION_RIGHT: number;
export declare const DIRECTION_UP: number;
export declare const DIRECTION_DOWN: number;
export declare class HorizontalAdapter implements SliderAdapter {
    slider: HTMLElement;
    config: GalleryConfig;
    readonly hammerDirection: number;
    readonly scrollSnapType: string;
    get scrollValue(): number;
    get clientSize(): number;
    get isContentLessThanContainer(): boolean;
    constructor(slider: HTMLElement, config: GalleryConfig);
    getScrollToValue(el: HTMLElement, behavior: ScrollBehavior): SmoothScrollOptions;
    getRootMargin(): string;
    getElementRootMargin(viewport: HTMLElement, el: HTMLElement): string;
    getCentralizerStartSize(): number;
    getCentralizerEndSize(): number;
    getHammerVelocity(e: any): number;
    getHammerValue(value: number, e: any, behavior: ScrollBehavior): ScrollToOptions;
}
export declare class VerticalAdapter implements SliderAdapter {
    slider: HTMLElement;
    config: GalleryConfig;
    readonly hammerDirection: number;
    readonly scrollSnapType: string;
    get scrollValue(): number;
    get clientSize(): number;
    get isContentLessThanContainer(): boolean;
    constructor(slider: HTMLElement, config: GalleryConfig);
    getScrollToValue(el: HTMLElement, behavior: ScrollBehavior): SmoothScrollOptions;
    getRootMargin(): string;
    getElementRootMargin(viewport: HTMLElement, el: HTMLElement): string;
    getCentralizerStartSize(): number;
    getCentralizerEndSize(): number;
    getHammerVelocity(e: any): number;
    getHammerValue(value: number, e: any, behavior: ScrollBehavior): ScrollToOptions;
}
