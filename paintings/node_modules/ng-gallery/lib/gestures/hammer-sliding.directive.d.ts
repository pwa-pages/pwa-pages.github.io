import { OnChanges, OnDestroy, SimpleChanges, NgZone, ElementRef, EventEmitter } from '@angular/core';
import { Platform } from '@angular/cdk/platform';
import { Directionality } from '@angular/cdk/bidi';
import { SliderAdapter } from '../components/adapters';
import { GalleryState } from '../models/gallery.model';
import { GalleryConfig } from '../models/config.model';
import { GalleryItemComponent } from '../components/gallery-item.component';
import { GalleryThumbComponent } from '../components/gallery-thumb.component';
import * as i0 from "@angular/core";
export declare class HammerSliding implements OnChanges, OnDestroy {
    private _document;
    private _el;
    private _dir;
    private _platform;
    private _zone;
    /** HammerJS instance */
    private _hammer;
    get _viewport(): HTMLElement;
    enabled: boolean;
    galleryId: string;
    items: GalleryItemComponent[] | GalleryThumbComponent[];
    adapter: SliderAdapter;
    state: GalleryState;
    config: GalleryConfig;
    activeIndexChange: EventEmitter<number>;
    isSlidingChange: EventEmitter<boolean>;
    constructor(_document: Document, _el: ElementRef<HTMLElement>, _dir: Directionality, _platform: Platform, _zone: NgZone);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private _subscribe;
    private _unsubscribe;
    private getIndexOnMouseUp;
    private getElementFromViewportCenter;
    static ɵfac: i0.ɵɵFactoryDeclaration<HammerSliding, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<HammerSliding, "[hammerSliding]", never, { "enabled": { "alias": "hammerSliding"; "required": false; }; "galleryId": { "alias": "galleryId"; "required": false; }; "items": { "alias": "items"; "required": false; }; "adapter": { "alias": "adapter"; "required": false; }; "state": { "alias": "state"; "required": false; }; "config": { "alias": "config"; "required": false; }; }, { "activeIndexChange": "activeIndexChange"; "isSlidingChange": "isSlidingChange"; }, never, never, true, never>;
}
