import { EventEmitter, AfterViewInit, OnChanges, QueryList, SimpleChanges, ElementRef } from '@angular/core';
import { Observable, Subject } from 'rxjs';
import { GalleryConfig } from '../models/config.model';
import { GalleryState, GalleryError } from '../models/gallery.model';
import { SliderAdapter } from './adapters';
import { SmoothScrollOptions } from '../smooth-scroll';
import { GalleryThumbComponent } from './gallery-thumb.component';
import * as i0 from "@angular/core";
export declare class GalleryThumbsComponent implements AfterViewInit, OnChanges {
    /** Stream that emits the slider position */
    readonly position$: Subject<SmoothScrollOptions>;
    /** Slider adapter */
    adapter: SliderAdapter;
    /** Stream that emits the thumb components once they're initialized */
    items$: Observable<GalleryThumbComponent[]>;
    /** Gallery ID */
    galleryId: string;
    /** Gallery state */
    state: GalleryState;
    /** Gallery config */
    config: GalleryConfig;
    /** Stream that emits when thumb is clicked */
    thumbClick: EventEmitter<number>;
    /** Stream that emits when an error occurs */
    error: EventEmitter<GalleryError>;
    /** Slider ElementRef */
    sliderEl: ElementRef;
    items: QueryList<GalleryThumbComponent>;
    get slider(): HTMLElement;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    trackByFn(index: number, item: any): any;
    onActiveIndexChange(index: number): void;
    scrollToIndex(value: number, behavior: ScrollBehavior): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<GalleryThumbsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<GalleryThumbsComponent, "gallery-thumbs", never, { "galleryId": { "alias": "galleryId"; "required": false; }; "state": { "alias": "state"; "required": false; }; "config": { "alias": "config"; "required": false; }; }, { "thumbClick": "thumbClick"; "error": "error"; }, never, never, true, never>;
}
