import { NgZone, ElementRef, AfterViewChecked, OnInit, OnChanges, OnDestroy, EventEmitter } from '@angular/core';
import { ImgManager } from '../utils/img-manager';
import { SliderAdapter } from '../components/adapters';
import { Gallery } from '../services/gallery.service';
import { GalleryConfig } from '../models/config.model';
import * as i0 from "@angular/core";
export declare class SliderResizeObserver implements AfterViewChecked, OnChanges, OnInit, OnDestroy {
    private _el;
    private _zone;
    private _gallery;
    private _imgManager;
    private _resizeObserver;
    private _autoHeightSubscription;
    private _resizeSubscription;
    private _shouldSkip;
    private _afterHeightChanged$;
    private get _viewport();
    private get _galleryCore();
    private get _isAutoHeight();
    galleryId: string;
    adapter: SliderAdapter;
    config: GalleryConfig;
    isResizingChange: EventEmitter<boolean>;
    constructor(_el: ElementRef<HTMLElement>, _zone: NgZone, _gallery: Gallery, _imgManager: ImgManager);
    ngOnInit(): void;
    ngOnChanges(): void;
    ngOnDestroy(): void;
    ngAfterViewChecked(): void;
    private updateSliderSize;
    private updateCentralizeCSSVariables;
    private _subscribeAutoHeight;
    private _unsubscribeAutoHeight;
    private setResizingState;
    private resetResizingState;
    static ɵfac: i0.ɵɵFactoryDeclaration<SliderResizeObserver, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<SliderResizeObserver, "[sliderResizeObserver]", never, { "galleryId": { "alias": "galleryId"; "required": false; }; "adapter": { "alias": "adapter"; "required": false; }; "config": { "alias": "config"; "required": false; }; }, { "isResizingChange": "isResizingChange"; }, never, never, true, never>;
}
